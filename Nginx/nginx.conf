# Nombre de processus de travail Nginx (ajuster selon les ressources système)
worker_processes 2;

# Emplacement du fichier PID de Nginx (identifiant de processus)
pid /var/run/nginx.pid;

# Configuration des connexions réseau
events { worker_connections 2048; # Nombre maximum de connexions simultanées par processus
}

# Bloc principal pour gérer les requêtes HTTP et HTTPS
http {

	# Définir un groupe de serveurs pour l'API (upstream)
	upstream api {
		server transcendence-api-1:8000;
	}

	# Définir un groupe de serveurs pour le Frontend
	upstream frontend {
		server transcendence-frontend-1:80;
	}

	# Définir un groupe de serveurs pour le Frontend
	upstream kibana {
		server transcendence-kibana-1:5601;
	}

	# Définir un groupe de serveurs pour Grafana
	upstream grafana {
		server transcendence-grafana-1:3000;
	}

	# Types MIME pour les fichiers servis
	#include conf/mime.types;
	default_type application/octet-stream; # Par défaut pour les fichiers inconnus

    	# Logs d'accès et d'erreurs
    	access_log /mnt/logs/nginx/access.log;
    	error_log /mnt/logs/nginx/error.log;

	# Activer la compression GZIP
	gzip on;
	gzip_min_length 1100;                # Taille minimale des fichiers à compresser
	gzip_buffers 4 8k;                   # Taille des tampons pour la compression
	gzip_types text/plain;               # Types de fichiers à compresser

	# Taille maximale des requêtes clients (0 = illimité)
	client_max_body_size 0;

	# Serveur principal
	server {
		listen 8443 ssl;          # Écoute sur toutes les adresses sur le port 443 (HTTPS)
		server_name localhost;    # Nom du serveur

		# Certificats SSL auto-signés
		ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
		ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

		# Protocole SSL utilisé (TLSv1.3 est le plus sécurisé)
		ssl_protocols TLSv1.3;

		# Configuration CORS (Cross-Origin Resource Sharing)
		add_header 'Access-Control-Allow-Origin' '*' always; # Autorise toutes les origines
		add_header access-control-allow-credentials true always;
		add_header access-control-allow-methods 'GET, POST, PUT, DELETE, OPTIONS' always;
		add_header access-control-allow-headers 'Accept,Authorization,Content-Type,Keep-Alive,Origin,User-Agent,Content-Disposition' always;

		root /mnt/media;

		location /api/media/player_picture {
			rewrite ^/api/media/(.*) /$1;
		}

		location /player_picture {
			try_files $uri player_picture/default_avatar.png;
		}
		# Localisation des requêtes vers /api
		location /api {
			proxy_set_header Host $host;                  # Transmet l'hôte au backend
			proxy_set_header X-Real-IP $remote_addr;      # Adresse IP réelle du client
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Chaîne d'IP
			proxy_pass http://api/; # Redirige les requêtes vers le groupe upstream "api"
		}

		# Kibana + dashboard logstash
		location /kibana {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://kibana; # Redirige vers le groupe upstream "kibana"
		}

		# Grafana
		location /grafana {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://grafana; # Redirige vers le groupe upstream "grafana"
		}

		# Localisation des requêtes pour toutes les autres URL (Frontend)
		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://frontend/; # Redirige vers le groupe upstream "frontend"
		}
	}
}
